# https://github.com/infinispan/infinispan/blob/15.2.1.Final/.github/workflows/tag.yml

name: Maven Publish

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "The branch to release."
        required: true
        default: "main"
      version:
        description: "Release version"
        required: true
        default: "0.0.1"
      nextVersion:
        description: "Next version"
        required: true
        default: "0.0.2-SNAPSHOT"

env:
  MAVEN_ARGS: -B -ntp

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Set up Java 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'zulu'
          cache: maven
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.GPG_SECRET_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Set release version
        run: |
          mvn -B versions:set -DprocessAllModules=true -DgenerateBackupPoms=false -DnewVersion=${{ github.event.inputs.version }}
          git commit --no-verify -a -m "[CI Skip] Releasing ${{ github.event.inputs.version }}"

      - name: Publish to Central
        run: mvn -B -DskipTests -Prelease deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}

      - name: Tag Release
        run: |
          git tag -a "v${{ github.event.inputs.version }}" -m "Release v${{ github.event.inputs.version }}"

      - name: Next Version
        run: |
          mvn -B versions:set -DprocessAllModules=true -DgenerateBackupPoms=false -DnewVersion=${{ github.event.inputs.nextVersion }}
          git commit --no-verify -a -m "[CI Skip] Next version ${{ github.event.inputs.nextVersion }}"

      - name: Push changes
        run: |
          git push origin $(git rev-parse --abbrev-ref HEAD)
          git push --tags

      - name: Create Release
        run: |
          gh release create v${{ github.event.inputs.version }} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
