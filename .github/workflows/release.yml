name: Build and Deploy Release

##
## Automates the release process
## 1. Run `./list-changes.sh` and update the changelog.md.
## 2. Run `./prepare-release.sh`
## 3. Create PR, merge PR
## 4. Run `git push origin --tags`
##

permissions:
  contents: write

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up Java 8
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: 'zulu'
          cache: maven
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }} # macOS: gpg --armor --export-secret-key

      - name: Get version
        run: |
          VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
          echo "VERSION=$VERSION"

      - name: Build Release with Maven
        id: build-release
        timeout-minutes: 120
        run: |
          mvn -ntp -B -DskipTests -Prelease clean package source:jar javadoc:jar gpg:sign deploy site site:stage
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

#      - name: Archive code coverage results
#        id: archive-coverage
#        uses: actions/upload-artifact@v4
#        with:
#          name: code-coverage-report
#          retention-days: 7
#          path: |
#            **/target/jacoco-results/jacoco.xml
#            **/target/jacoco-results/**/*.html
#
#      - name: Archive Release
#        id: archive-release
#        uses: actions/upload-artifact@v4
#        with:
#          name: archive-release
#          retention-days: 7
#          path: |
#            **/target/*.asc
#            **/target/*.jar
#            **/target/*.pom
#            target/*.buildinfo

      - name: Archive Site
        id: archive-site
        uses: actions/upload-artifact@v4
        with:
          name: archive-site
          retention-days: 7
          path: target/staging/


#  publish_coverage:
#    name: publish code coverage reports
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Download coverage reports
#        uses: actions/download-artifact@v4
#        with:
#          name: code-coverage-report
#      - name: Run codacy-coverage-reporter
#        uses: codacy/codacy-coverage-reporter-action@master
#        with:
#          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
#          coverage-reports: target/jacoco-results/jacoco.xml
#
#  docker:
#    name: Publish Docker
#    runs-on: ubuntu-latest
#    needs: build

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/*.jar
            target/*.pom
            target/*.asc
            target/*.md5
            target/*.sha1
            target/*.sha256
            target/*.buildinfo
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - name: Get version
#        id: get-version
#        run: |
#          VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
#          echo "VERSION=$VERSION" >> $GITHUB_ENV
#      - name: Download release build
#        uses: actions/download-artifact@v4
#        with:
#          name: archive-release
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1.1.4
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: v${{ env.VERSION }}
#          release_name: v${{ env.VERSION }}
#          prerelease: false
#          draft: false
#          body: |
#            Refer to the [CHANGELOG.md](https://github.com/rosestack/rose-build/blob/main/CHANGELOG.md#change-log) for information about improvements and upgrade notes.
#      - name: Upload buildinfo
#        id: upload-release-buildinfo
#        uses: actions/upload-release-asset@v1.0.2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: target/rose-build-${{env.VERSION}}.buildinfo
#          asset_name: rose-build-${{env.VERSION}}.buildinfo
#          asset_content_type: text/plain

  publish:
    name: Publish gh-pages
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download Site
        uses: actions/download-artifact@v4
        with:
          name: archive-site
          path: target/staging
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: target
      - name: Deploy gh-pages
        uses: JamesIves/github-pages-deploy-action@v4.6.3
        with:
          branch: gh-pages
          folder: target/staging
          clean: false
